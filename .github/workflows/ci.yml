name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'phase-*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: lms_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/local/bin/

    - name: Run database migrations
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/lms_test?sslmode=disable
      run: |
        migrate -path migrations -database $DATABASE_URL up

    - name: Run go fmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Go code is not formatted:"
          gofmt -s -l .
          exit 1
        fi

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/lms_test?sslmode=disable
        REDIS_URL: redis://localhost:6379/0
        LMS_SERVER_MODE: test
        LMS_JWT_SECRET: test-secret-key
        LMS_JWT_REFRESH_SECRET: test-refresh-secret
        LMS_DATABASE_HOST: localhost
        LMS_DATABASE_PORT: 5432
        LMS_DATABASE_USER: postgres
        LMS_DATABASE_PASSWORD: postgres
        LMS_DATABASE_NAME: lms_test
        LMS_DATABASE_SSL_MODE: disable
        TEST_DB_PASSWORD: postgres
      run: |
        go test -v -race -coverprofile=coverage.out ./...

